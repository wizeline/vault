AWSTemplateFormatVersion: '2010-09-09'
Description: 'QS(0039) HashiCorp Vault License: Apache 2.0 (Please do not remove) Aug,10,2018'
Parameters:
  HostedZoneId:
    Default: Z3G2YACQBPT66
    Type: String
  configBucket:
    Default: cup-vault-dev-config
    Type: String
  configKey:
    Default: vault.hcl
    Type: String
  DnsName:
    Default: develop.cup-vault.com
    Type: String
  VaultSslCert:
    Default: arn:aws:acm:us-west-2:122600842152:certificate/fc8ba33c-3d86-47a1-af79-604c1bc878fa
    Type: String
  KeyPair:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  VaultInstanceType:
    Type: String
    Description: vault node instance type
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    ConstraintDescription: Choose an instance type. m4.large or larger recommended.
    Default: t2.micro
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-hashicorp-vault/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  EmailAddress:
    Type: String
    Description: Email Address for SNS Topic. Alarms for Vault instance memory utilzation
    Default: none@example.com
  PrivateSubnet1ID:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-xxxxxxxx)
    Type: AWS::EC2::Subnet::Id
  VPCID:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    Description: CIDR Block for the VPC
    Type: String
  AccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    Description: 'The CIDR IP range that is permitted to access Consul Note: a value of 0.0.0.0/0 will allow access from ANY ip address'
    Type: String
  VaultDownloadURL:
    Type: String
    Description: 'The URL to download the Vault zip file '
    Default: https://releases.hashicorp.com/vault/0.11.3/vault_0.11.3_linux_amd64.zip
Conditions:
  GovCloudCondition:
    Fn::Equals:
    - Ref: AWS::Region
    - us-gov-west-1
Mappings:
  AWSAMIRegionMap:
    AMI:
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180912
    us-east-1:
      US1604HVM: ami-059eeca93cf09eebd
    us-east-2:
      US1604HVM: ami-0782e9ee97725263d
    us-west-1:
      US1604HVM: ami-0ad16744583f21877
    us-west-2:
      US1604HVM: ami-0e32ec5bc225539f5
Resources:
  VaultSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Ref: EmailAddress
        Protocol: email
  VaultSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH access from the Bastion servers.
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: AccessCIDR
      - IpProtocol: tcp
        FromPort: '8200'
        ToPort: '8200'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '8500'
        ToPort: '8500'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - VaultSecGroup
  VaultMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Memory alarm for my instance
      AlarmActions:
      - Ref: VaultSNSTopic
      MetricName: MemoryUtilization
      Namespace: System/Linux
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '75'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: Vault2
  VaultLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: Vault-Audit-Logs
      RetentionInDays: 7
  vaultinstancerole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource:
            - arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - cloudwatch:PutMetricData
            - cloudwatch:GetMetricStatistics
            - cloudwatch:ListMetrics
            Resource:
            - "*"
          - Effect: Allow
            Action:
            - ec2:DescribeInstances
            Resource: "*"
          - Effect: "Allow"
            Action: 
            - "s3:Get*"
            Resource: 
              Fn::Join: 
                - ""
                - 
                  - "arn:aws:s3:::"
                  - "cup-vault-dev-config"
                  - "/*"
  vaultinstanceprofile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: vaultinstancerole
  Vault2:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          vault_install:
          - install_vault
          - run_vault
          - install_cloudwatch_logs_and_mon_scripts
        install_cloudwatch_logs_and_mon_scripts:
          packages:
            apt:
              unzip: []
              libwww-perl: []
              libdatetime-perl: []
          sources:
            "/usr/local": http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip
          files:
            "/etc/awslogs-config-file":
              source:
                Fn::Sub:
                - https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}scripts/awslogs-config-file
                - QSS3BucketName:
                    Ref: QSS3BucketName
                  QSS3KeyPrefix:
                    Ref: QSS3KeyPrefix
              mode: '000700'
              owner: root
              group: root
            "/usr/local/awslogs-agent-setup.py":
              source: https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
              mode: '000700'
              owner: root
              group: root
            "/etc/cron.hourly/cloudwatch-monitoring.sh":
              source:
                Fn::Sub:
                - "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}scripts/cloudwatch-monitoring.sh"
                - QSS3BucketName:
                    Ref: QSS3BucketName
                  QSS3KeyPrefix:
                    Ref: QSS3KeyPrefix
              mode: '000700'
              owner: root
              group: root
          commands:
            01_create_awslogs_config_file:
              command: 
                Fn::Sub:
                - sed -i "s/__VAULT_LOG_GROUP__/${LogGroup}/g" /etc/awslogs-config-file
                - LogGroup:
                    Ref: VaultLogGroup
            02_run_awslogs_agent_setup.py:
              command:
                Fn::Sub:
                - python /usr/local/awslogs-agent-setup.py -n -r ${Region} -c /etc/awslogs-config-file
                - Region:
                    Ref: AWS::Region
                  QSS3BucketName:
                    Ref: QSS3BucketName
                  QSS3KeyPrefix:
                    Ref: QSS3KeyPrefix
            03_enable_awslogs_service:
              command: systemctl enable awslogs
            04_start_awslogs_service:
              command: systemctl start awslogs
            04_make_mon_put_instance_data_exececutable:
              command: chmod +x /usr/local/aws-scripts-mon/mon-put-instance-data.pl
            06_install_crontab:
              command: crontab  /etc/cron.hourly/cloudwatch-monitoring.sh
        install_vault:
          sources:
            "/usr/bin":
              Ref: VaultDownloadURL
          files:
            "/etc/systemd/system/vault.service":
              source:
                Fn::Sub:
                - https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}scripts/vault.service
                - QSS3BucketName:
                    Ref: QSS3BucketName
                  QSS3KeyPrefix:
                    Ref: QSS3KeyPrefix
              mode: '000700'
              owner: root
              group: root
          commands:
            01_chmod_and_chown_vault:
              command: chmod 0755 /usr/bin/vault && chown root:root /usr/bin/vault
        run_vault:
          commands:
            01_register_vault_binary:
              command: service vault start
    Properties:
      InstanceType:
        Ref: VaultInstanceType
      KeyName:
        Ref: KeyPair
      NetworkInterfaces:
      - DeleteOnTermination: 'true'
        DeviceIndex: 0
        SubnetId:
          Ref: PrivateSubnet1ID
        GroupSet:
        - Ref: VaultSecGroup
      ImageId:
        Fn::FindInMap:
        - AWSAMIRegionMap
        - Ref: AWS::Region
        - US1604HVM
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          VolumeSize: '20'
          VolumeType: gp2
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -x\n"
            - "apt-get -y update \n"
            - "apt-get -y install  awscli \n"
            - "apt-get -y install  python-setuptools \n"
            - "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz \n"
            - "mkdir -p /opt/vault/policies/ /opt/vault/scripts/ /etc/vault.d/ \n"
            - Fn::Sub:
              - "aws s3 cp s3://${configBucket}/${configKey} /etc/vault.d/vault.hcl \n"
              - configBucket:
                  Ref: configBucket
                configKey:
                  Ref: configKey
            - "chmod 700 /etc/vault.d/vault.hcl \n"
            - "\n"
            - "/usr/local/bin/cfn-init"
            - " --verbose "
            - " --stack "
            - Ref: AWS::StackName
            - " --resource Vault2"
            - " --configsets vault_install"
            - " --region "
            - Ref: AWS::Region
            - "\n"
            - "/usr/local/bin/cfn-signal -e $? "
            - "  --stack "
            - Ref: AWS::StackName
            - " --resource Vault2 "
            - " --region "
            - Ref: AWS::Region
            - "\n"
      IamInstanceProfile:
        Ref: vaultinstanceprofile
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - Vault2
  VaultRecoveryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: EC2 Autorecovery for Vault2 node. Autorecover if we fail EC2
        status checks for 5 minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '5'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: VaultSNSTopic
      - Fn::Join:
        - ''
        - - 'arn:aws:automate:'
          - Ref: AWS::Region
          - ":ec2:recover"
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: Vault2
  VaultDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref 'HostedZoneId'
      Comment: DNS name for Vault2 instance.
      Name: !Join ['', [!Ref 'DnsName', .]]
      Type: CNAME
      TTL: '300'
      ResourceRecords:
      - !GetAtt [ ElasticLoadBalancer, DNSName ]
  VaultElbSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Limit access to the ELB
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 8200
            ToPort: 8200
            CidrIp: 0.0.0.0/0
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones: ['us-west-2b']
      CrossZone: true
      Instances:
      - !Ref Vault2
      Listeners:
      - LoadBalancerPort: 443
        InstancePort: 8200
        Protocol: HTTPS
        InstanceProtocol: HTTP
        SSLCertificateId: !Ref VaultSslCert
        PolicyNames: []
      - LoadBalancerPort: 8200
        InstancePort: 8200
        Protocol: HTTP
        InstanceProtocol: HTTP
      - LoadBalancerPort: 80
        InstancePort: 8200
        Protocol: HTTP
        InstanceProtocol: HTTP
      HealthCheck:
          Target: "TCP:8200"
          HealthyThreshold: "3"
          UnhealthyThreshold: "5"
          Interval: "6"
          Timeout: "5"
      SecurityGroups:
      - !GetAtt [VaultElbSecurityGroup, GroupId]

Outputs:
    LoadBalancer:
        Value: !Ref Domain
Outputs:
  VaultNode1PrivateIp:
    Description: 'Private IP of Vault2 Node #1'
    Value:
      Fn::GetAtt:
      - Vault2
      - PrivateIp
  VaultNode1PublicIp:
    Description: 'Public IP of Vault2 Node #1'
    Value:
      Fn::GetAtt:
      - Vault2
      - PublicIp

